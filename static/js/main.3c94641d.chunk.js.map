{"version":3,"sources":["Tint.js","Controls.js","Level.js","Sudo.js","Camera.js","Cactus.js","Cube.js","Pyramid.js","index.js"],"names":["TintPass","size","tintColor","THREE","width","height","radius","strength","threshold","basic","onBeforeCompile","shader","uniforms","uContrast","value","uOffset","uTint","fragmentShader","replace","UnrealBloomPass","extend","EffectComposer","RenderPass","Tint","rest","useThree","gl","scene","camera","target","useMemo","generateMipmaps","minFilter","magFilter","format","stencilBuffer","encoding","composer","useRef","useFrame","current","render","ref","args","attachFns","Controls","children","config","minPolarAngle","Math","PI","maxPolarAngle","rotation","props","invalidate","useSpring","tension","mass","friction","precision","onChange","x","y","z","set","spring","api","useDrag","movement","down","clamp","start","domElement","group","Level","nodes","useGLTF","from","position","to","delay","lookAt","object","Sudo","useState","setRotation","useEffect","timeout","SudoHead","wander","random","setTimeout","clearTimeout","primitive","Camera","rotateY","setRotateY","Cactus","uTime","clock","elapsedTime","vertexShader","Cube","matcap","useTexture","floating","setFloating","positionSpring","rotationSpring","rotationX","rotationY","bounce","ceil","v","Pyramid","rotate","fallback","Loader","dpr","toneMapping","fov","attach","dispose","document","getElementById"],"mappings":"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","file":"static/js/main.3c94641d.chunk.js","sourcesContent":["import { useRef, useMemo } from 'react'\r\nimport * as THREE from 'three'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\r\nimport { extend, useThree, useFrame } from '@react-three/fiber'\r\n\r\n// A modified bloom pass that gives everything a soft, diffused tint.\r\n\r\nclass TintPass extends UnrealBloomPass {\r\n  constructor(size, tintColor) {\r\n    super(new THREE.Vector2(size.width, size.height))\r\n\r\n    this.radius = 0.1\r\n    this.strength = 0.1\r\n    this.threshold = 0\r\n\r\n    this.basic.onBeforeCompile = (shader) => {\r\n      shader.uniforms.uContrast = { value: 1.1 }\r\n      shader.uniforms.uOffset = { value: -0.1 }\r\n      shader.uniforms.uTint = { value: new THREE.Color(tintColor) }\r\n\r\n      shader.fragmentShader = shader.fragmentShader.replace(\r\n        '#include <common>',\r\n        `\r\n          #include <common>\r\n          uniform float uContrast;\r\n          uniform float uOffset;\r\n          uniform vec3 uTint;\r\n        `\r\n      )\r\n      shader.fragmentShader = shader.fragmentShader.replace(\r\n        '#include <output_fragment>',\r\n        `\r\n          gl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n          gl_FragColor.rgb *= uContrast;\r\n          gl_FragColor.rgb += uOffset;\r\n          gl_FragColor.rgb += uTint;\r\n        `\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nextend({ EffectComposer, RenderPass, TintPass })\r\n\r\nconst Tint = ({ tintColor = 0x0e0a19, ...rest }) => {\r\n  const { size, gl, scene, camera } = useThree()\r\n  const target = useMemo(\r\n    () =>\r\n      new THREE.WebGLMultisampleRenderTarget(size.width, size.height, {\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearFilter,\r\n        magFilter: THREE.LinearFilter,\r\n        format: THREE.RGBAFormat,\r\n        stencilBuffer: false,\r\n        encoding: THREE.sRGBEncoding\r\n      }),\r\n    [size.width, size.height]\r\n  )\r\n  const composer = useRef()\r\n\r\n  // Hijack the frame loop & manually render\r\n  useFrame(() => composer.current.render(), 1)\r\n\r\n  return (\r\n    <effectComposer {...rest} ref={composer} args={[gl, target]}>\r\n      <renderPass attachFns={['addPass']} args={[scene, camera]} />\r\n      <tintPass attachFns={['addPass']} args={[size, tintColor]} />\r\n    </effectComposer>\r\n  )\r\n}\r\n\r\nexport default Tint\r\n","import * as THREE from 'three'\r\nimport { useThree } from '@react-three/fiber'\r\nimport { useSpring, a } from '@react-spring/three'\r\nimport { useDrag } from '@use-gesture/react'\r\n\r\n// Modified from https://twitter.com/0xca0a/status/1464545129893617666.\r\n// This is a flexible version that I might add to Drei if we can get\r\n// react-native support for use-gesture.\r\n\r\nconst Controls = ({\r\n  children,\r\n  config,\r\n  minPolarAngle = Math.PI / -4,\r\n  maxPolarAngle = Math.PI / 2,\r\n  rotation = [0, 0, 0],\r\n  ...props\r\n}) => {\r\n  const { scene, invalidate, size, gl } = useThree()\r\n  const [spring, api] = useSpring(() => ({\r\n    ...props,\r\n    rotation,\r\n    config: {\r\n      tension: 350,\r\n      mass: 2,\r\n      friction: 20,\r\n      precision: 0.0001,\r\n      ...config\r\n    },\r\n    onChange({ value }) {\r\n      const { rotation } = value\r\n      const [x, y, z] = rotation\r\n\r\n      // If controls has no children, rotate the scene instead\r\n      if (!children) scene.rotation.set(x, y, z)\r\n\r\n      invalidate()\r\n    }\r\n  }))\r\n\r\n  useDrag(\r\n    ({ movement: [x], down }) => {\r\n      const [y, , z] = rotation\r\n      x = THREE.MathUtils.clamp(x / size.width, minPolarAngle, maxPolarAngle)\r\n\r\n      api.start({\r\n        rotation: down ? [y, x * 1.25, z] : rotation\r\n      })\r\n    },\r\n    { target: gl.domElement }\r\n  )\r\n\r\n  return <a.group {...spring}>{children}</a.group>\r\n}\r\n\r\nexport default Controls\r\n","import { useThree } from '@react-three/fiber'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport { useSpring } from '@react-spring/three'\r\n\r\nconst Level = () => {\r\n  const { nodes } = useGLTF('/level.glb')\r\n  const { camera } = useThree()\r\n\r\n  // Intro camera animation\r\n  useSpring({\r\n    from: {\r\n      y: camera.position.y + 5\r\n    },\r\n    to: {\r\n      y: camera.position.y\r\n    },\r\n    delay: 300,\r\n    config: {\r\n      friction: 100\r\n    },\r\n    onChange({ value }) {\r\n      const { y } = value\r\n      camera.position.y = y\r\n      camera.lookAt(0, 0, 0)\r\n    }\r\n  })\r\n\r\n  return <primitive object={nodes.Level} />\r\n}\r\n\r\nexport default Level\r\n","import { useState, useEffect } from 'react'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport { useSpring, a } from '@react-spring/three'\r\n\r\nconst Sudo = () => {\r\n  const { nodes } = useGLTF('/level.glb')\r\n  const [rotation, setRotation] = useState([0, 0, 0])\r\n\r\n  const spring = useSpring({\r\n    rotation,\r\n    config: {\r\n      friction: 40\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    let timeout\r\n\r\n    // Tweak Sudo's head so it rotates cleanly.\r\n    // Ideally, this would be done in Blender\r\n    nodes.SudoHead.position.x -= 0.02\r\n    nodes.SudoHead.position.y -= 0.04\r\n    nodes.SudoHead.position.z += 0.03\r\n\r\n    const wander = () => {\r\n      setRotation([0.8 + Math.random() * 0.4, 0.25 + Math.random() * 0.25, 0])\r\n      timeout = setTimeout(wander, (1 + Math.random() * 3) * 1000)\r\n    }\r\n\r\n    wander()\r\n\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <a.primitive {...spring} rotation-order=\"YXZ\" object={nodes.SudoHead} />\r\n      <primitive object={nodes.Sudo} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Sudo\r\n","import { useState, useEffect } from 'react'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport { useSpring, a } from '@react-spring/three'\r\n\r\nconst Camera = () => {\r\n  const { nodes } = useGLTF('/level.glb')\r\n  const [rotateY, setRotateY] = useState(0)\r\n\r\n  const spring = useSpring({\r\n    'rotation-z': rotateY,\r\n    config: {\r\n      friction: 40\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    let timeout\r\n\r\n    const wander = () => {\r\n      setRotateY(Math.random())\r\n      timeout = setTimeout(wander, (1 + Math.random() * 5) * 1000)\r\n    }\r\n\r\n    wander()\r\n\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    }\r\n  }, [])\r\n\r\n  return <a.primitive {...spring} object={nodes.Camera} />\r\n}\r\n\r\nexport default Camera\r\n","import { useRef } from 'react'\r\nimport { useFrame } from '@react-three/fiber'\r\nimport { useGLTF } from '@react-three/drei'\r\n\r\nconst Cactus = () => {\r\n  const { nodes } = useGLTF('/level.glb')\r\n  const uTime = useRef({ value: 0 })\r\n\r\n  // Update cactus time uniform\r\n  useFrame(({ clock }) => (uTime.current.value = clock.elapsedTime * 1000))\r\n\r\n  return (\r\n    <primitive\r\n      object={nodes.Cactus}\r\n      // Modify a dedicated baked material to swish in the wind\r\n      material-onBeforeCompile={(shader) => {\r\n        shader.uniforms.uTime = uTime.current\r\n\r\n        shader.vertexShader = shader.vertexShader.replace(\r\n          '#include <common>',\r\n          `\r\n            #include <common>\r\n            uniform float uTime;\r\n\r\n            vec2 rotate(vec2 v, float a) {\r\n              float s = sin(a);\r\n              float c = cos(a);\r\n              mat2 m = mat2(c, -s, s, c);\r\n              return m * v;\r\n            }\r\n          `\r\n        )\r\n\r\n        shader.vertexShader = shader.vertexShader.replace(\r\n          '#include <begin_vertex>',\r\n          `\r\n            #include <begin_vertex>\r\n\r\n            float angleMultiplier = 0.25;\r\n            float timeFrequency = 0.002;\r\n            float elevationOffsetMultiplier = 3.0;\r\n\r\n            vec2 transformedRotated = rotate(transformed.xz, sin(uTime * timeFrequency + transformed.z * elevationOffsetMultiplier) * log(abs(transformed.z) + 1.0) * angleMultiplier);\r\n            transformed.xz = transformedRotated;\r\n          `\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Cactus\r\n","import { useState, useEffect } from 'react'\r\nimport { useGLTF, useTexture } from '@react-three/drei'\r\nimport { useSpring, a } from '@react-spring/three'\r\n\r\nconst Cube = () => {\r\n  const { nodes } = useGLTF('/level.glb')\r\n  const matcap = useTexture('/pink.jpg')\r\n  const [floating, setFloating] = useState(false)\r\n  const [rotation, setRotation] = useState([0, 0, 0])\r\n\r\n  const positionSpring = useSpring({\r\n    position: [0, floating ? 0.2 : 0, 0],\r\n    config: {\r\n      friction: 80\r\n    }\r\n  })\r\n\r\n  const rotationSpring = useSpring({\r\n    rotation,\r\n    config: {\r\n      friction: 40\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    let timeout\r\n    let rotationX = 0\r\n    let rotationY = 0\r\n\r\n    const bounce = () => {\r\n      rotationX += Math.ceil(Math.random() * 3)\r\n      rotationY += Math.ceil(Math.random() * 3)\r\n\r\n      setFloating((v) => !v)\r\n      setRotation([rotationX * Math.PI * 0.5, rotationY * Math.PI * 0.5, 0])\r\n\r\n      timeout = setTimeout(bounce, 1.5 * 1000)\r\n    }\r\n\r\n    bounce()\r\n\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <a.group {...positionSpring}>\r\n      <a.primitive {...rotationSpring} object={nodes.Cube}>\r\n        <meshMatcapMaterial matcap={matcap} />\r\n      </a.primitive>\r\n    </a.group>\r\n  )\r\n}\r\n\r\nexport default Cube\r\n","import { useState, useEffect } from 'react'\r\nimport { useGLTF, useTexture } from '@react-three/drei'\r\nimport { useSpring, a } from '@react-spring/three'\r\n\r\nconst Pyramid = () => {\r\n  const { nodes } = useGLTF('/level.glb')\r\n  const matcap = useTexture('/cyan.jpg')\r\n  const [rotation, setRotation] = useState([0, 0, 0])\r\n\r\n  const spring = useSpring({\r\n    rotation,\r\n    config: {\r\n      friction: 80\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    let timeout\r\n\r\n    const rotate = () => {\r\n      setRotation([\r\n        (Math.random() - 0.5) * Math.PI * 3,\r\n        0,\r\n        (Math.random() - 0.5) * Math.PI * 3\r\n      ])\r\n\r\n      timeout = setTimeout(rotate, (0.5 + Math.random() * 2) * 1000)\r\n    }\r\n\r\n    rotate()\r\n\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <a.primitive {...spring} object={nodes.Pyramid}>\r\n      <meshMatcapMaterial matcap={matcap} />\r\n    </a.primitive>\r\n  )\r\n}\r\n\r\nexport default Pyramid\r\n","// Original and the models by Bruno Simon: https://threejs-journey.com\n// See tweet for full attribution and source models from Bruno himself\n// https://twitter.com/Cody_J_Bennett/status/1466002039964680193\n\nimport { render } from 'react-dom'\nimport { Suspense } from 'react'\nimport * as THREE from 'three'\nimport { Canvas } from '@react-three/fiber'\nimport { Loader } from '@react-three/drei'\nimport Tint from './Tint'\nimport Controls from './Controls'\nimport Level from './Level'\nimport Sudo from './Sudo'\nimport Camera from './Camera'\nimport Cactus from './Cactus'\nimport Cube from './Cube'\nimport Pyramid from './Pyramid'\n\nrender(\n  <Suspense fallback={<Loader />}>\n    <Canvas\n      dpr={[1, 2]}\n      gl={{ toneMapping: THREE.NoToneMapping }}\n      camera={{ fov: 25, position: [5, 1, 5] }}\n    >\n      <color attach=\"background\" args={[0xd0cbff]} />\n      <Tint />\n      <Controls />\n      <group dispose={null} position-y={-0.75}>\n        <Level />\n        <Sudo />\n        <Camera />\n        <Cactus />\n        <Cube />\n        <Pyramid />\n      </group>\n    </Canvas>\n  </Suspense>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}